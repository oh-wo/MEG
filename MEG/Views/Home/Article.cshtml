@using MEG.Models;
@model Event
@{string Title = Model.Title == null ? "Enter a title" : Model.Title;}

@{
    ViewBag.Title = Title;
    int SeatsRemaining = (Model.TotalSeats.GetValueOrDefault() - Model.SeatsTaken.GetValueOrDefault());

    //SeatsRemaining = SeatsRemaining < 0 ? (SeatsRemaining + e.FakeSeats.GetValueOrDefault()) : SeatsRemaining;
    if (User.Identity.IsAuthenticated)
    {
        //show the real number if you're authenticated
    }
    else
    {
        //only apply the placeholder seats if there are enough remaining - otherwise remove them
        SeatsRemaining = (SeatsRemaining - Model.FakeSeats.GetValueOrDefault()) > 10 ? (SeatsRemaining - Model.FakeSeats.GetValueOrDefault()) : SeatsRemaining;
        //no matter what we need to show at least 0 seats
        SeatsRemaining = SeatsRemaining > 0 ? SeatsRemaining : 0;
    }
}




<style>
    /*REPORT STUFF*/
    textarea#reportBody {
        float: left;
        clear: left;
        width: 98.5%;
        padding: 1%;
        margin-top: 1%;
        margin-bottom: 19%;
        font-size: inherit;
        font-style: inherit;
        font-family: inherit;
        resize: none;
        height: 500px;
    }

    .pictureContainer {
        width: 100%;
        float: left;
        clear: left;
        margin-top: 1%;
        margin-bottom: 1%;
        overflow-y: hidden;
        overflow-x: scroll;
        height: 200px !important;
        white-space: nowrap;
    }
    .imgContainer {
        height: 100% !important;
        width: 23%;
        margin-right: 2%;
        display: inline-block;
        margin-bottom: 0;
        position: relative;
    }
        .imgContainer .removeImage{
            display:none;
        } 
        .imgContainer:hover .removeImage {
            position: absolute;
            top: 2%;
            right: 2%;
            background-color: #f00;
            padding: 1% 3% 2% 3%;
            border: transparent;
            border-radius: 100%;
            font-weight: bold;
            cursor: pointer;
            display:block;
        }
        .pictureContainer img {
            height: 100%;
            width: 100%;
        }
    div#uploadReportImageContainer {
        float: left;
        clear: left;
        background-color: rgba(0, 0, 0, 0.71);
        color: #fff;
        width: 100%;
        padding: 0.5%;
    }

    #uploadReportImageContainer form {
        float: left;
    }
    

    /*ARTICLE STUFF */
    #FakeSeats {
        float: left;
        width: 30px;
        margin-left: 5px;
        margin-right: 5px;
    }
    .fakeSeatsHelpText {
        float: left;
        margin-left: 2px;
        margin-top: 3px;
        font-size: 15px;
    }
    #cover {
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: 1;
        background-color: rgba(0, 0, 0, 0.75);
        top: 0px;
        left: 0px;
    }

    #articleContainer {
        float: left;
        clear: both;
        width: 100%;
        margin-top: 50px;
    }

    #Title {
        float: left;
        font-weight: bold;
        font-size: 30px;
        width: 100%;
    }

    #title-date {
        float: left;
        clear: both;
        font-weight: bold;
        font-size: 20px;
        margin-top: 4px;
        margin-right: 3px;
        color: #000;
    }

    #title-type {
        float: left;
        font-weight: bold;
        font-size: 20px;
    }

    #seats {
        float: right;
        margin-top: 8px;
    }

    #seats-remaining {
        float: left;
        margin-top: 4px;
        font-size: 14px;
    }

    #TotalSeats {
        width: 24px;
        float: left;
        margin-right: 5px;
    }

    #rsvp {
        float: right;
        margin-top: 9px;
        margin-right: 10px;
    }

    #Body {
        float: left;
        text-align: justify;
        width: 58%;
        clear: both;
        resize: none;
        margin-top: 10px;
        margin-bottom: 50px;
        height: 300px;
    }

    #body-image {
        width: 100%;
        height: 100%;
    }

    #body-image-container {
        margin-top: 10px;
        width: 40%;
        float: right;
        background-color: #ccc;
        padding: 0px;
        height: 300px;
        text-align: center;
        position: relative;
    }

    #body-image-uploadbox {
        position: absolute;
        top: 0px;
        left: 0px;
        background-color: rgba(255, 255, 255, 0.8);
        width: 100%;
        height: 100%;
    }

    .hidden {
        display: none;
    }

    #body-image-placeholder {
        margin-top: 40px;
    }

    #details {
        float: right;
        margin-bottom: 20px;
        width: 67%;
    }

        #details thead {
            background-color: #f33;
        }

            #details thead td {
                font-weight: bold;
                text-align: center;
            }

        #details td {
            text-align: center;
        }

    .venue {
        text-align: center;
        text-overflow: ellipsis;
    }

    .thumb {
        height: 75px;
        border: 1px solid #000;
        margin: 10px 5px 0 0;
    }

    #savingMessage {
        border: solid 1px #000;
        width: 100px;
        height: 20px;
        position: absolute;
        right: 100px;
        z-index: 1;
        background-color: #000;
        text-align: center;
        color: #fff;
    }

    #mail-reminder-details {
        clear: both;
        float: left;
        background-color: #ccc;
        padding-left: 5px;
        border-radius: 5px;
        padding-right: 5px;
        margin-bottom: 10px;
    }

    .e-active-container {
        float: left;
        margin-top: 5px;
    }

    .e-active {
        float: left;
    }
</style>

<style>
    /*razor css goes here - otherwise it stuffs up visual studio's formatting of all the other styles*/
     input[type="text"],textarea{
        @if (!User.Identity.IsAuthenticated)
        { @Html.Raw("border:solid 1px #fff;");
        }
        else
        {@Html.Raw("border:solid 1px #ccc;");
        }
    }
</style>
<script src="/Scripts/Reservation.js"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script>
    //Map stuff
    $(document).ready(function () {
        var venue01 = $('#Venue01').val();
        var venue02 = $('#Venue02').val();
        var venue03 = $('#Venue03').val();
        var venue04 = $('#Venue04').val();
        var venue05 = 'New Zealand';
        var loc = venue01 + ' ' + venue02 + ' ' + venue03 + ' ' + venue04 + ' ' + venue05;
        x = GetCoords(loc);
        if (x != undefined) {
            initializeMap(x);

            var options = {
                position: new google.maps.LatLng(x.lat, x.lng),
                title: venue01,
            };
            var marker = new google.maps.Marker(options);
            marker.setMap(map);
        }
    });
    function GetCoords(location) {
        var x;
        $.ajax({
            url: "http://maps.googleapis.com/maps/api/geocode/json?address=" + location + "&sensor=true",
            type: "get",
            async: false,
            success: function (a) {
                console.log(a);
                if (a.status == 'OK') {
                    x = a.results[0].geometry.location;
                } else {
                    //problem!
                }
            },
            error: function (a) {
                console.log(a);
            }
        });
        return x;
    }
    function initializeMap(location) {
        var myOptions = {
            zoom: 15,
            center: new google.maps.LatLng(x.lat, x.lng),
            mapTypeId: google.maps.MapTypeId.TERRAIN,
            styles: [
        {
            stylers: [{ saturation: -100 }]
        }
            ]
        };

        map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);
    }
</script>

<script>
        $(document).ready(function () {
            //Article main controls
            $(document).on('click', '#deleteArticle', function () {
                if (confirm('Are you sure you want to delete this article?')) {
                    var data = {
                        ArticleID: $('#articleContainer').attr('articleid'),
                    };

                    var dataToPost = JSON.stringify(data);

                    $.ajax({
                        type: "POST",
                        url: "/Home/DeleteArticle",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: dataToPost,
                        success: function (a) {
                            if (a.Success) {
                                alert('Event deleted');
                                window.location = '/Home';
                            } else {
                                alert(a.Message);
                            };
                        },
                        error: function (ex) {
                        },
                    });


                } else {
                    //dont delete the article
                }
            });
            //Article editing posting
            $('#articleContainer').on('change', 'input', function (e) {
                var field = $(this).attr('id');
                var value = $(this).val();

                var articleID = $('#articleContainer').attr('articleID');
                var data = {
                    Field: field,
                    Value: value,
                    ArticleID: articleID,
                };

                var dataToPost = JSON.stringify(data);
                var $input = $(this);
                $.ajax({
                    type: "POST",
                    url: "/Home/UpdateArticle",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (a) {
                        if (a) {
                            Saving(0);
                            if ($input.attr('id') == 'EventDate') {
                                $('#title-date').text(WordifyMonthIndex($input.datepicker('getDate').getMonth()));
                            } else {
                                //Doesn't apply
                            }
                        } else {
                            Saving(2);
                        }
                    },
                    error: function (ex) {
                        Saving(1);
                    },
                });

            });

            $('#articleContainer').on('change', 'textarea', function () {
                var field = $(this).attr('id');
                var value = $(this).val();
                var articleID = $('#articleContainer').attr('articleID');
                var data = {
                    Field: field,
                    Value: value,
                    ArticleID: articleID,
                };
                var dataToPost = JSON.stringify(data);
                $.ajax({
                    type: "POST",
                    url: "/Home/UpdateArticle",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (a) {
                        if (a) {
                            Saving(0);
                        } else {
                            Saving(2);
                        }
                    },
                    error: function (ex) {
                        Saving(1);
                    },
                });
            });
            $('#articleContainer').on('change', 'select', function () {
                var field = $(this).attr('id');
                var value = $(this).val();
                var articleID = $('#articleContainer').attr('articleID');
                var data = {
                    Field: field,
                    Value: value,
                    ArticleID: articleID,
                };
                var dataToPost = JSON.stringify(data);
                $.ajax({
                    type: "POST",
                    url: "/Home/UpdateArticle",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (a) {
                        if (a.Success) {
                            Saving(0);
                            if (field = 'reminderEmailOffset') {
                                //Need to update the date displayed
                                $('#ReminderSentDate').text(a.Value);
                            } else {
                                //erroneous
                            }
                        } else {
                            Saving(2);
                        }
                    },
                    error: function (ex) {
                        Saving(1);
                    },
                });
            });
            //Helper function
            function WordifyMonthIndex(monthIndex) {
                var wordMonth;
                switch (monthIndex) {
                    case 0: wordMonth = 'January';
                        break;
                    case 1: wordMonth = 'February';
                        break;
                    case 2: wordMonth = 'March';
                        break;
                    case 3: wordMonth = 'April';
                        break;
                    case 4: wordMonth = 'May';
                        break;
                    case 5: wordMonth = 'June';
                        break;
                    case 6: wordMonth = 'July';
                        break;
                    case 7: wordMonth = 'August';
                        break;
                    case 8: wordMonth = 'September';
                        break;
                    case 9: wordMonth = 'October';
                        break;
                    case 10: wordMonth = 'November';
                        break;
                    case 11: wordMonth = 'December';
                        break;
                }
                return wordMonth;
            }
            //Article editing controls
            //--configure datepicker
            $("#EventDate").datepicker();
            $("#EventDate").datepicker("option", "dateFormat", "DD d MM yy");
            //--set initial date
            $('#EventDate').datepicker('setDate', new Date($('#InitialEventDateYear').val(), parseInt($('#InitialEventDateMonth').val()) - 1, $('#InitialEventDateDay').val()))
            //--configure time selects
            var timeString = ' ';
            var time = '00:00am';
            var meridian;
            for (i = 7; i < 21; i++) {
                time = ConvertInitialTime(i);
                timeString += '<option value="' + time + '">' + time + '</option>';
                time = ConvertInitialTime(i + 0.5);
                timeString += '<option value="' + time + '">' + time + '</option>';
            }
            $('#StartTime').html(timeString);
            $('#EndTime').html(timeString);
            //--set initial time
            $('#StartTime').val(ConvertInitialTime($('#StartTime_totalHours').val()));
            $('#EndTime').val(ConvertInitialTime($('#EndTime_totalHours').val()));

        });
        function ConvertInitialTime(totalHoursString) {
            var time = {};
            time.totalHours = parseFloat(totalHoursString);
            time.hours = Math.floor(time.totalHours) > 12 ? Math.floor(time.totalHours) - 12 : Math.floor(time.totalHours);
            time.hours = time.hours < 10 ? ('0' + time.hours) : time.hours;
            time.minutes = Math.round((time.totalHours - Math.floor(time.totalHours)) * 60) == 0 ? '00' : '30';
            time.meridian = Math.floor(time.totalHours) >= 12 ? 'pm' : 'am';
            return (time.hours + ':' + time.minutes + time.meridian);
        }
        $(document).on('click','.removeImage', function (e) {
            if (confirm('Are you sure you want to delete this picture?')) {
                var $imgContainer = $(this).closest('.imgContainer');
                var $img = $(this).closest('.imgContainer').find('img');
                var picID = $imgContainer.attr('id');

                $(this).hide();//prevent them from doing it again
                $img.css('opacity', 0.5);//feedback from the user

                var data = {
                    ID: picID,
                };
                var dataToPost = JSON.stringify(data);
                $.ajax({
                    type: "POST",
                    url: "/Home/RemoveReportImage",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (a) {
                        $imgContainer.fadeOut('slow', function () {
                            $(this).remove();
                        })
                    },
                    error: function (ex) {
                    },
                });

            }
        })
</script>
@if (!User.Identity.IsAuthenticated)
{
    <script>
            $(document).ready(function () {
                var startTime = $('#StartTime').val();
                var endTime = $('#EndTime').val();
                $('<div>' + startTime + '</div>').insertAfter('#StartTime');
                $('<div>' + endTime + '</div>').insertAfter('#EndTime');
                $('#StartTime').remove();
                $('#EndTime').remove();
            });


    </script>
}
else
{
    <script>
        $(document).on('change', '.e-active', function (e) {
            var data = {
                eID: $('#articleContainer').attr('articleid'),
                state: $(this).attr('checked') == 'checked',
            };
            var dataToPost = JSON.stringify(data);
            $.ajax({
                type: "POST",
                url: "/Home/ChangeEventActivity",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (a) {
                    console.log(a);
                },
                error: function (ex) {
                },
            });
        });
        function handleFileSelect(evt) {
            $('<div id="body-image-uploading" style="margin-top:30px;">Uploading your image...</div>').appendTo('#body-image-uploadbox');

            file = evt.target.files[0];
            if (file.type.match('image.*')) {
                if (window.FileReader) {
                    reader = new FileReader();
                    reader.onloadend = function (e) {
                        //showUploadedItem(e.target.result, file.fileName);
                    };
                    reader.readAsDataURL(file);
                }
                formdata = new FormData();
                if (formdata) {
                    formdata.append("default_export_filename", file);
                    formdata.append("filename", $('#articleContainer').attr('articleid'));
                }
                if (formdata) {
                    $.ajax({
                        url: '/Home/UploadImage',
                        type: "POST",
                        data: formdata,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.success) {
                                $('#body-image-placeholder').remove();
                                $('#body-image').attr('src', '/Content/Uploads/' + res.url);

                            } else {
                                //server error

                            }
                            $('#body-image-uploading').remove();
                        },
                        error: function (e) {
                            $('#body-image-uploading').remove();

                        }
                    });
                }
            }

        }
        $(document).on('mouseenter', '#body-image-container', function () {
            $('#body-image-uploadbox').fadeIn(200);
        });
        $(document).on('mouseleave', '#body-image-container', function () {
            $('#body-image-uploadbox').fadeOut(200);
        });
        $(document).on('change', '#files', function (e) { handleFileSelect(e); });
        function Saving(state) {
            if ($('#savingMessage').length == 0) {
                var string = '';
                switch (state) {
                    case 0: string = 'saved';
                        break;
                    case 1: string = 'saving error';
                        break;
                    case 2: string = 'server error';
                        break;
                }
                if (string != '') {
                    $('<div id="savingMessage" hidden="hidden" style="top:' + (posTop() + 20) + 'px;">' + string + '</div>').appendTo('body');

                    $('#savingMessage').fadeIn(300, function () {
                        setTimeout(function () { $('#savingMessage').fadeOut('slow', function () { $('#savingMessage').remove(); }); }, 1000);
                    });
                } else {
                    //Dont know how to handle this kind of input
                }
            } else {
                //already have displayed a message
            }
        }
        function posTop() {
            return typeof window.pageYOffset != 'undefined' ? window.pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ? document.body.scrollTop : 0;
        }

        
        //UPLOAD REPORT IMAGES
        $(document).on('change', '#files', function (e) { handleReportFileSelect(e); });
        function handleReportFileSelect(evt) {
            $('<div id="body-image-uploading" style="margin-top:30px;">Uploading your image...</div>').appendTo('#uploadReportImageContainer');
            formdata = new FormData();
            $(evt.target.files).each(function(i,file){
                if (file.type.match('image.*')) {
                    if (window.FileReader) {
                        reader = new FileReader();
                        reader.onloadend = function (e) {
                            //showUploadedItem(e.target.result, file.fileName);
                        };
                        reader.readAsDataURL(file);
                    }
                
                    if (formdata) {
                        formdata.append("default_export_filename", file);
                        formdata.append("filename", $('#articleContainer').attr('articleid'));
                    }
                }
            })
                if (formdata) {
                    $.ajax({
                        url: '/Home/UploadReportImage',
                        type: "POST",
                        data: formdata,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            $(res).each(function(i,ils){
                                if (ils.success) {
                                    //   $('#body-image-placeholder').remove();
                                    $('<div id=' + ils.url + ' class="imgContainer"><div class="removeImage">x</div><img src="' + '/Content/Uploads/' + ils.url + '"></div>').prependTo('.pictureContainer');

                                } else {
                                    //server error

                                }
                            });
                            //$('#body-image-uploading').remove();
                        },
                        error: function (e) {
                            //$('#body-image-uploading').remove();

                        }
                    });
                }
            }
    </script>
}

<div class="content-wrapper">


    <output id="list"><span id="uploadedImage"></span></output>

    <div id="articleContainer" articleid="@Model.ID">
        @if (User.Identity.IsAuthenticated)
        {
            @Html.Raw("<input type=\"button\" value=\"delete\" id=\"deleteArticle\" title=\"This is will permanently delete the article and any associated data such as rsvp records.\" style=\"float:left; margin-bottom:10px;\"/>");

            <div class="e-active-container" title="Active articles are visible to the public">
                <input type="checkbox" class="e-active" name="e-active"
                       @if (Model.Active ?? false) { @Html.Raw("checked=\"checked\"")    ; } />
                <label for="e-active">Active</label>
            </div>
        }
        <input type="text" id="Title" title="Event Title" value="@Title"
               @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")   ; } />
        <div id="title-date" title="Month of event">@Html.Raw(Model.EventDate == null ? DateTime.UtcNow.AddDays(30).ToString("MMMM") : Model.EventDate.Value.ToString("MMMM"))</div>
        <input type="text" id="title-type" title="Event type" value="@Model.TitleType" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")    } } />
      
        @{//ONLY NEED TO SHOW THIS STUFF IF IT's AN UP AND COMING ARTICLE.. OTHERWISE WE NEED TO SHOW THE REPORT
            if (Model.EventDate.GetValueOrDefault().AddDays(7) > DateTime.UtcNow) { 
        
        
          <div id="seats">

            <div id="seats-remaining" title="Number of seats which remain available" type="text">@SeatsRemaining</div>
            <div style="float: left; margin-top: 4px; font-size: 14px;">
                /
            </div>
            <input id="TotalSeats" title="Total number of seats for this event" type="text" value="@Model.TotalSeats" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")   ; } maxlength="3" /><div style="float: left; margin-top: 2px; font-size: 15px;">
                seats remaining
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="fakeSeatsHelpText">&</div>
                <input type="text" id="FakeSeats" value="@Html.Raw(Model.FakeSeats.HasValue?Model.FakeSeats.Value:0)" maxlength="3" />
                <div class="fakeSeatsHelpText">fake seats taken</div>
            }
        </div>
        <div class="e-container">
            <input id="rsvp" type="button" value="rsvp" @if (User.Identity.IsAuthenticated || Model.EventDate.Value < DateTime.Now) { @Html.Raw("disabled=\"disabled\"")  }
                                                        else
                                                        { //Cursory check to see if user has already rsvpd to this event   
                                                            if ((HttpContext.Current != null
                        && HttpContext.Current.Request.Cookies.AllKeys.Contains(Model.ID.ToString())
                        && HttpContext.Current.Request.Cookies[Model.ID.ToString()].Value == true.ToString())
                        || SeatsRemaining == 0)
                                                            { @Html.Raw("disabled=\"disabled\"")   ; @Html.Raw(" title=\"You've already rsvp'd to this event. Go to your emails to modify your reservation\"")   ; } else { @Html.Raw("title=\"Please RSVP to reserve a spot\"")   ; } } else {  }  } } />

            <textarea id="Body" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")   ; }>
                @Model.Body
            </textarea>

            <div id="body-image-container">

                <img id="body-image" src="@String.Concat("/Content/Uploads/", Model.ID, Model.ImageExtension)" onerror="this.src='/Content/noimage.jpg';" />

                <div id="body-image-uploadbox" style="display:none;">
                    <form enctype="multipart/form-data">
                        <input type="file" id="files" name="files" accept="image/*" />

                    </form>
                </div>
            </div>

            <div id="map_canvas" style="width: 30%; height: 300px; float: left; clear: both; margin-right: 20px; margin-bottom: 20px; margin-top: 10px;">
            </div>

            <table id="details">
                <thead>
                    <tr>
                        <td style="width: 100px;">Presenter</td>
                        <td>Date</td>
                        <td>Time</td>
                        <td>Venue</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <input id="Presenter" title="Event presenter" type="text" value="@Model.Presenter" style="width:80px;" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")   ; } />
                        </td>
                        <td>
                            <input id="InitialEventDateYear" type="hidden" value="@Model.EventDate.GetValueOrDefault(DateTime.UtcNow).Year" />
                            <input id="InitialEventDateMonth" type="hidden" value="@Model.EventDate.GetValueOrDefault(DateTime.UtcNow).Month" />
                            <input id="InitialEventDateDay" type="hidden" value="@Model.EventDate.GetValueOrDefault(DateTime.UtcNow).Day" />
                            <input id="EventDate" title="Event date" type="text" readonly="readonly" style="text-overflow:ellipsis;" />
                        </td>
                        <td>
                            <input id="StartTime_totalHours" type="hidden" value="@(Model.StartTime == null ? 18 : Model.StartTime)" />
                            <select id="StartTime" title="Start time" type="text" style="width:82px;" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")   ; }></select>
                            -
                            <input id="EndTime_totalHours" type="hidden" value="@(Model.EndTime == null ? 20 : Model.EndTime)" title="Event end time" />
                            <select id="EndTime" title="End time" title="Event start time" type="text" style="width:82px;" @if (!User.Identity.IsAuthenticated) { Html.Raw("readonly=\"readonly\""); }></select>
                        </td>
                        <td>
                            <input id="Venue01" class="venue" type="text" value="@Model.Venue1" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\" title=\"Venue\"")   ; } else { @Html.Raw("title=\"Venue line 1\"")   ; }>
                            <input id="Venue02" class="venue" type="text" value="@Model.Venue2" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\" title=\"Venue\"")   ; } else { @Html.Raw("title=\"Venue line 2\"")   ; }>
                            <input id="Venue03" class="venue" type="text" value="@Model.Venue3" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\" title=\"Venue\"")   ; } else { @Html.Raw("title=\"Venue line 3\"")   ; }>
                            <input id="Venue04" class="venue" type="text" value="@Model.Venue4" @if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\" title=\"Venue\"")   ; } else { @Html.Raw("title=\"Venue line 4\"")   ; }>
                    </tr>
                </tbody>
            </table>
            @Html.Partial("ReservationBox", Model)

        </div>


            }
            else
            {
                //SHOW THE REPORT
                if (User.Identity.IsAuthenticated || Model.EventReportPics.Count>0) {
                <div class="pictureContainer">
                    @foreach (EventReportPic pic in Model.EventReportPics)
                    {
                        @Html.Raw(String.Format("<div id=\"{0}\" class=\"imgContainer\">{2}<img src=\"/Content/Uploads/{0}{1}\"/></div>",pic.ID,pic.ImageExtension,User.Identity.IsAuthenticated?"<div class=\"removeImage\">x</div>":""));
                    }
                </div>
        }
            if (User.Identity.IsAuthenticated) { 
    <div id="uploadReportImageContainer">
        <form enctype="multipart/form-data">
            <input type="file" id="files" name="files" accept="image/*" multiple="multiple" />

        </form>
    </div>
            }
            
                <textarea id="reportBody" @{if (!User.Identity.IsAuthenticated) { @Html.Raw("readonly=\"readonly\"")    ; }}>@Html.Raw(String.Format("{0}",Model.ReportText!=null?Model.ReportText:"We haven't uploaded a report yet - check back soon!"))</textarea>
                
            }
}
 </div>

